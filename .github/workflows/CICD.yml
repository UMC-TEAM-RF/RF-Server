name: Build and Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]
    
env:
  PROJECT_NAME: cicd_folder
  BUCKET_NAME: rf-cicd-bucket
  CODE_DEPLOY_APP_NAME: rfDeploy
  DEPLOYMENT_GROUP_NAME: rfserver_deploy

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup Java JDK
      uses: actions/setup-java@v1
      with:
        distribution: 'corretto'
        java-version: 17
        
    - name: Write MYSQL HOST
      run: |
        echo "MYSQL_HOST=${{secrets.MYSQL_HOST}}"
        echo "MYSQL_HOST=${{secrets.MYSQL_HOST}}" >> ./scripts/env.sh
    
    - name: Write MYSQL PASSWORD
      run: |
        echo "MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}"
        echo "MYSQL_PASSWORD=${{secrets.MYSQL_PASSWORD}}" >> ./scripts/env.sh
    
    - name: Write MYSQL USERNAME
      run: |
        echo "MYSQL_USERNAME=${{secrets.MYSQL_USERNAME}}"
        echo "MYSQL_USERNAME=${{secrets.MYSQL_USERNAME}}" >> ./scripts/env.sh
        
    - name : Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Build with Gradle
      run: ./gradlew build
      
#     - name: Make Zip File
#       run: |
#         mv ./build/libs/*.jar ./
#         zip buildFile.zip ./appspec.yml ./*.jar ./scripts/deploy.sh ./scripts/env.sh
#       shell: bash
      
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credential@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-northeast-2
        
#     - name: Upload to S3
#       run: |
#         aws s3 cp \
#           --region ap-northeast-2 \
#           ./buildFile.zip s3://$BUCKET_NAME/$PROJECT_NAME/
      
#     - name: Code Deploy
#       run: |
#         aws deploy create-deployment \
#           --application-name $CODE_DEPLOY_APP_NAME \
#           --deployment-config-name CodeDeployDefault.OneAtATime \
#           --deployment-group-name $DEPLOYMENT_GROUP_NAME \
#           --s3-location bucket=$BUCKET_NAME, \
#           bundleType=zip, \
#           key=$PROJECT_NAME/buildFile.zip
      
