name: Build and Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]
    
env:
  PROJECT_NAME: cicd_folder
  BUCKET_NAME: rf-cicd-bucket
  CODE_DEPLOY_APP_NAME: rfDeploy
  DEPLOYMENT_GROUP_NAME: rfserver_deploy

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis:latest
        ports:
          - 6379:6379
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        token: ${{secrets.TOKEN_GITHUB}}
        submodules: true
      
    - name: Setup Java JDK
      uses: actions/setup-java@v1
      with:
        distribution: 'corretto'
        java-version: 17
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      shell: bash
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Build with Gradle
      run: ./gradlew build
      shell: bash
      
    - name: Make Zip File
      run: |
        mkdir content
        mv ./build/libs/*.jar ./content/
        zip buildFile.zip ./appspec.yml ./content/*.jar ./scripts/deploy.sh
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: |
        aws s3 cp \
          --region ap-northeast-2 \
          ./buildFile.zip s3://$BUCKET_NAME/$PROJECT_NAME/
      
    - name: Code Deploy
      run: |
        aws deploy create-deployment \
          --application-name $CODE_DEPLOY_APP_NAME \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name $DEPLOYMENT_GROUP_NAME \
          --s3-location bucket=$BUCKET_NAME,key=$PROJECT_NAME/buildFile.zip,bundleType=zip
          
    - name: Sleep for 15 seconds
      run: sleep 15
      shell: bash

    - name: Deploy in AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.EC2_HOST}}
        username: ${{secrets.SSH_USERNAME}}
        key: ${{secrets.SSH_KEY}}
        script: |
          sudo ${{secrets.EC2_SCRIPTS_PATH}}/deploy.sh
